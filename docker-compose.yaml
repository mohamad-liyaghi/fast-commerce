version: "3.8"

services:
  backend:
    container_name: 'fast-commerce-backend'
    command: sh "scripts/docker/entrypoint.sh"
    tty: true
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
    networks:
        - main
    depends_on:
        - postgres
        - postgres-test
        - redis
        - redis-test
        - smtp4dev

  postgres:
    container_name: 'fast-commerce-postgres'
    image: postgres:15.4-alpine
    env_file:
      - ./backend/env/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - main

  postgres-test:
    container_name: 'fast-commerce-postgres-test'
    image: postgres:15.4-alpine
    ports:
      - "5433:5432"
    environment:
      - 'POSTGRES_HOST_AUTH_METHOD=trust'
    networks:
      - main

  redis:
    container_name: 'fast-commerce-redis'
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
        - redis-data:/data
    networks:
      - main

  redis-test:
    container_name: 'fast-commerce-redis-test'
    image: redis:7-alpine
    ports:
      - "6380:6379"
    networks:
      - main

  smtp4dev:
    image: rnwood/smtp4dev:v3
    container_name: 'fast-commerce-smtp4dev'
    ports:
      - "5000:80"
      - "25:25"
    restart: always

networks:
    main:

volumes:
    postgres-data:
    redis-data:
